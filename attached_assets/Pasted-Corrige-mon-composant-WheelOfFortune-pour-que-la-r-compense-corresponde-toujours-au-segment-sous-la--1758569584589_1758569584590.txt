Corrige mon composant WheelOfFortune pour que la rÃ©compense corresponde toujours au segment sous la flÃ¨che blanche (12h), et non plus un rÃ©sultat alÃ©atoire ou basÃ© sur le DOM.  

Voici ce quâ€™il faut faire :  
1. Supprime ou ignore toute la logique `winningIndexByDOM`.  
2. Ajoute une fonction `winningIndexByRotation` qui calcule lâ€™index gagnant en fonction de lâ€™angle final de rotation de la roue :

```ts
const sector = 360 / segments.length;
const norm = (d: number) => ((d % 360) + 360) % 360;

const winningIndexByRotation = (theta: number) => {
  const t = norm(theta);
  const adjusted = (360 - t + sector / 2) % 360;
  return Math.floor(adjusted / sector);
};

	3.	Dans performActualSpin, aprÃ¨s avoir dÃ©fini finalRotation, remplace le setTimeout qui calcule la rÃ©compense par ce code :

setTimeout(async () => {
  const winIndex = winningIndexByRotation(finalRotation);
  const winningSegment = segments[winIndex];

  const reward: WheelReward = {
    type: winningSegment.type as 'coins' | 'gems' | 'xp' | 'tickets',
    amount: winningSegment.amount,
  };

  setReward(reward);

  try {
    await apiRequest("POST", "/api/wheel-of-fortune/spin", {
      rewardType: reward.type,
      rewardAmount: reward.amount,
    });

    if (reward.type === 'coins') {
      updateUser({ coins: (user?.coins || 0) + reward.amount });
    } else if (reward.type === 'gems') {
      updateUser({ gems: (user?.gems || 0) + reward.amount });
    } else if (reward.type === 'tickets') {
      updateUser({ tickets: (user?.tickets || 0) + reward.amount });
    }

    queryClient.invalidateQueries({ queryKey: ["/api/user/profile"] });
    queryClient.invalidateQueries({ queryKey: ["/api/user/coins"] });
    queryClient.invalidateQueries({ queryKey: ["/api/spin/status"] });
  } catch (e) {
    console.error("API call failed:", e);
  }

  setIsSpinning(false);
  setShowReward(true);
  setShouldAnimate(false);
}, 3000);

RÃ©sultat attendu :
ðŸ‘‰ Quand la roue sâ€™arrÃªte, le segment affichÃ© pile sous la flÃ¨che est exactement le reward affichÃ© et attribuÃ© au joueur.